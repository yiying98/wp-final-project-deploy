[{"/Users/laiyiying/Desktop/wp-final-project-deploy/src/index.js":"1","/Users/laiyiying/Desktop/wp-final-project-deploy/src/reportWebVitals.js":"2","/Users/laiyiying/Desktop/wp-final-project-deploy/src/App.js":"3","/Users/laiyiying/Desktop/wp-final-project-deploy/src/myShop.js":"4","/Users/laiyiying/Desktop/wp-final-project-deploy/src/containers/pages/Homepage.js":"5","/Users/laiyiying/Desktop/wp-final-project-deploy/src/containers/FixedAppBar.js":"6","/Users/laiyiying/Desktop/wp-final-project-deploy/src/containers/pages/Register.js":"7","/Users/laiyiying/Desktop/wp-final-project-deploy/src/containers/pages/GoogleMap.js":"8","/Users/laiyiying/Desktop/wp-final-project-deploy/src/containers/pages/Login.js":"9","/Users/laiyiying/Desktop/wp-final-project-deploy/src/containers/pages/IntroductionPage.js":"10","/Users/laiyiying/Desktop/wp-final-project-deploy/src/containers/pages/product_details/ProductDetail.js":"11","/Users/laiyiying/Desktop/wp-final-project-deploy/src/assests/style/Style.js":"12","/Users/laiyiying/Desktop/wp-final-project-deploy/src/api.js":"13","/Users/laiyiying/Desktop/wp-final-project-deploy/src/containers/pages/SalePage.js":"14","/Users/laiyiying/Desktop/wp-final-project-deploy/src/containers/pages/Manage.js":"15","/Users/laiyiying/Desktop/wp-final-project-deploy/src/containers/pages/product_details/feature.js":"16","/Users/laiyiying/Desktop/wp-final-project-deploy/src/containers/pages/product_details/rating.js":"17","/Users/laiyiying/Desktop/wp-final-project-deploy/src/components/Item.js":"18","/Users/laiyiying/Desktop/wp-final-project-deploy/src/constants/constant.js":"19","/Users/laiyiying/Desktop/wp-final-project-deploy/src/constants/cosntantLogout.js":"20","/Users/laiyiying/Desktop/wp-final-project-deploy/src/containers/pages/sections/MediaSection.js":"21","/Users/laiyiying/Desktop/wp-final-project-deploy/src/containers/pages/product_details/icons.js":"22","/Users/laiyiying/Desktop/wp-final-project-deploy/src/assests/style/Style_sale.js":"23"},{"size":500,"mtime":1624989571313,"results":"24","hashOfConfig":"25"},{"size":362,"mtime":1624989571314,"results":"26","hashOfConfig":"25"},{"size":2792,"mtime":1624989571266,"results":"27","hashOfConfig":"25"},{"size":964,"mtime":1624989571313,"results":"28","hashOfConfig":"25"},{"size":1813,"mtime":1624989571310,"results":"29","hashOfConfig":"25"},{"size":12714,"mtime":1624989571309,"results":"30","hashOfConfig":"25"},{"size":4406,"mtime":1624989571311,"results":"31","hashOfConfig":"25"},{"size":2385,"mtime":1624989571309,"results":"32","hashOfConfig":"25"},{"size":3815,"mtime":1624989571310,"results":"33","hashOfConfig":"25"},{"size":172,"mtime":1624989571310,"results":"34","hashOfConfig":"25"},{"size":12980,"mtime":1624989571311,"results":"35","hashOfConfig":"25"},{"size":2514,"mtime":1624989571266,"results":"36","hashOfConfig":"25"},{"size":104,"mtime":1624995262799,"results":"37","hashOfConfig":"25"},{"size":7956,"mtime":1624989571311,"results":"38","hashOfConfig":"25"},{"size":18252,"mtime":1624989571310,"results":"39","hashOfConfig":"25"},{"size":1023,"mtime":1624989571312,"results":"40","hashOfConfig":"25"},{"size":1428,"mtime":1624989571312,"results":"41","hashOfConfig":"25"},{"size":3862,"mtime":1624989571308,"results":"42","hashOfConfig":"25"},{"size":3438,"mtime":1624989571308,"results":"43","hashOfConfig":"25"},{"size":3730,"mtime":1624989571309,"results":"44","hashOfConfig":"25"},{"size":1387,"mtime":1624989571313,"results":"45","hashOfConfig":"25"},{"size":550,"mtime":1624989571312,"results":"46","hashOfConfig":"25"},{"size":2513,"mtime":1624989571267,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"18k0wj0",{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/laiyiying/Desktop/wp-final-project-deploy/src/index.js",[],"/Users/laiyiying/Desktop/wp-final-project-deploy/src/reportWebVitals.js",[],"/Users/laiyiying/Desktop/wp-final-project-deploy/src/App.js",[],"/Users/laiyiying/Desktop/wp-final-project-deploy/src/myShop.js",[],"/Users/laiyiying/Desktop/wp-final-project-deploy/src/containers/pages/Homepage.js",["99"],"import React, { useEffect, useState } from 'react';\nimport Item from '../../components/Item';\nimport Box from '@material-ui/core/Box';\n\nimport Grid from \"@material-ui/core/Grid\";\n\nimport axios from '../../api.js';\n\n\n\n\nexport default function HomePage({ isSearch, searchType, searchString ,setSearch}) {\n    const [productInfos, setProductInfos] = useState([]);\n    // let location = useLocation();\n    // console.log(location);\n    useEffect(() => {\n        fetchProductInfos();\n        \n    }, [])\n\n    const fetchProductInfos = async (searchType, searchString) => {\n        try {\n            let queryParams = {};\n            if (searchType && searchString) queryParams = { searchString: searchString, searchType: searchType };\n            console.log(queryParams);\n            const { data: { message, productInfo } } = await axios.get('/api/get-product-info', { params: queryParams });\n            let productInfoObject = JSON.parse(productInfo);\n            console.log(message);\n            //console.log(productInfoObject);\n            setProductInfos(productInfoObject);\n        } catch (error) {\n            throw Error('When fetching product info => Error ' + error);\n        }\n    };\n    //handle searching\n    useEffect(() => {\n        fetchProductInfos(searchType, searchString);\n        console.log(\"searching\");\n        setSearch(false)\n    }, [searchType])\n    // if (isSearch) {\n    //     fetchProductInfos(searchType, searchString);\n    //     console.log(\"searching\");\n    //     setSearch(false)\n\n    // }\n    //handle searching\n\n\n    return (\n        <Grid container direction='row'>\n\n            {productInfos.map((item, index) => (\n\n                <Box mt={8} mx={2} >\n                    <Item props={item} key={index} />\n                </Box>\n\n            ))}\n\n        </Grid>\n    );\n}","/Users/laiyiying/Desktop/wp-final-project-deploy/src/containers/FixedAppBar.js",[],"/Users/laiyiying/Desktop/wp-final-project-deploy/src/containers/pages/Register.js",[],"/Users/laiyiying/Desktop/wp-final-project-deploy/src/containers/pages/GoogleMap.js",["100","101","102","103"],"import React, { useState, useEffect } from 'react';\nimport { GoogleMap, LoadScript, Marker, InfoWindow  } from '@react-google-maps/api';\nimport axios from '../../api';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nconst MapContainer = () => {\n  const [ selected, setSelected ] = useState({});\n  const [items, setItems] = useState([]);\n  \n  async function fetchData(){\n    const {\n            data: { messages, message },\n          } = await axios.post('/api/get-item')\n    if (!messages) alert(message);\n    else setItems(messages);\n}\n\n\n  const onSelect = item => {\n      setSelected(item);\n    }\n  // const locations = [\n  //     {\n  //       name: \"Location 1\",\n  //       location: { \n  //         lat: 25.019096,\n  //         lng: 121.546366\n  //       },\n  //     },\n  //     {\n  //       name: \"Location 2\",\n  //       location: { \n  //         lat: 25.03876,\n  //         lng: 121.521604\n  //       },\n  //     },\n  //     {\n  //       name: \"Location 3\",\n  //       location: { \n  //         lat: 25.058547,\n  //         lng: 121.563281\n  //       },\n  //     },\n  //   ];\n  \n\n    useEffect(() => {\n        fetchData()\n        console.log(items)\n\n\n    },[]);\n\nconst mapStyles = {        \n  height: \"100vh\",\n  width: \"100%\"};\n\nconst defaultCenter = {\n  lat:25.014947, lng: 121.535549 \n}\n\nreturn (\n   <LoadScript\n     googleMapsApiKey='AIzaSyDlr3jj0FaxiAiqSzwSMwzKnPZwnrV3otE'>\n      <GoogleMap\n        mapContainerStyle={mapStyles}\n        zoom={13}\n        center={defaultCenter}>\n      {\n          items.map(item => {\n              const lat=parseFloat(item.lat)\n              const lng=parseFloat(item.log)\n              item.location={lat:lat,lng:lng}\n              console.log(item.location)\n            return (\n            <Marker key={item.name} position={item.location}\n            onClick={() => onSelect(item)}/>\n            )\n          })\n       }\n       {\n          selected.location && \n          (\n            <InfoWindow\n            position={selected.location}\n            clickable={true}\n            onCloseClick={() => setSelected({})}\n          >\n            <p>商家名稱：{selected.traderName}<br/>商品：{selected.productName}<br/>數量：{selected.quantity}個<br/>特價：{selected.onSalePrice}元</p>\n          </InfoWindow>\n          )\n       }\n   </GoogleMap>\n   </LoadScript>\n)\n}\n\nexport default MapContainer;\n\n","/Users/laiyiying/Desktop/wp-final-project-deploy/src/containers/pages/Login.js",[],"/Users/laiyiying/Desktop/wp-final-project-deploy/src/containers/pages/IntroductionPage.js",[],"/Users/laiyiying/Desktop/wp-final-project-deploy/src/containers/pages/product_details/ProductDetail.js",["104","105"],"import React from 'react';\nimport { useState, useEffect } from \"react\";\nimport \"./detail.css\";\nimport Feature from './feature'\nimport Badge from '@material-ui/core/Badge';\nimport { withStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport Button from '@material-ui/core/Button';\n\nimport Typography from '@material-ui/core/Typography';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from '@material-ui/core/Card';\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Ratings from \"./rating\";\nimport { Avatar, CardMedia } from \"@material-ui/core\";\nimport Box from '@material-ui/core/Box';\n\nimport { useParams } from \"react-router\";\nimport axios from '../../../api';\nimport Item from '../../../components/Item';\n\n\nconst Detail = () => {\n\n\n    const [detailInfo, setDetailInfo] = useState({})\n    const [recommand, setRecommand] = useState([]);\n    let id = useParams();\n    useEffect(() => {\n        fetchDetailInfos();\n    }, []);\n\n\n    const fetchDetailInfos = async () => {\n        console.log(id);\n        try {\n            const { data: { message, productInfo } } = await axios.get('/api/get-product-info', { params: id });\n            const productInfoObject = JSON.parse(productInfo);\n            console.log(message);\n            setDetailInfo(productInfoObject);\n        } catch (error) {\n            throw Error(`When fetching detail information => Error: ${error}`);\n        }\n    }\n\n    const fetchRecommandInfos = async (address, productName, traderName) => {\n        let recommandItems = [];\n        console.log(address);\n        // XX區.....\n        const district = address.slice(0, 3);\n        // XX麵包 / XX蛋糕 / 兩個字的\n        const productType = productName.slice(-2);\n        // 店家名稱 連鎖店名--分店店名\n        // e.g. 全聯--大安店\n        let trader;\n        if (traderName.includes('--')) {\n            const re = /\\s*--\\s*/;\n            let traderAndBranch = traderName.split(re);\n            trader = traderAndBranch[0];\n        } else trader = traderName;\n        const recommandType = [productType, trader, district];\n        const searchTypeIndex = ['productName', 'traderName', 'address'];\n        for (let i=0;i<recommandType.length;i++){\n            let searchType = searchTypeIndex[i];\n            try {\n                const { data: { productInfo } } = await axios.get(\n                    '/api/get-product-info',\n                    { params: { searchString: recommandType[i], searchType: searchType } }\n                );\n                const recommandItem = JSON.parse(productInfo)\n                recommandItems.push(recommandItem[0]);\n            } catch (error) {\n                throw new Error('Error at get recommand items' + error);\n            }\n        }\n        setRecommand(recommandItems);\n    }\n\n\n    const { productName, onSalePrice, originalPrice, address, traderName, expirationDate, quantity,img } = detailInfo;\n    var test\n    for (var x in img){\n        test=img[x]\n    }\n    var imgarray=[]\n    for (var c in test){\n        imgarray.push(test[c])\n    }\n\n    \n\n    // const [quality, setQuality] = useState(0);\n    // const [cart, setCart] = useState(0);\n\n    const theme = createMuiTheme({\n        typography: {\n            fontSize: 5,\n        },\n    });\n    const productDiscountPrice = (onsale, origin) => {\n        return `-${Math.round(((origin - onsale) * 100) / origin)}% off`;\n\n    }\n    // const addCart = () => {\n    //     let number = quality;\n    //     number = cart + number\n    //     setCart(number);\n    // }\n\n    const StyledBadge = withStyles((theme) => ({\n        badge: {\n            right: -3,\n            top: 13,\n            border: `2px solid ${theme.palette.background.paper}`,\n            padding: '0 4px',\n        },\n    }))(Badge);\n    const useStyle = makeStyles((thems) => ({\n        card: {\n            width: 300,\n            height: 400,\n            marginTop: 60,\n            marginLeft: 110\n\n        },\n        media: {\n            width: '100%',\n            height: '100%',\n        },\n        button: {\n            border: '1px solid',\n            padding: 2,\n            marginLeft: 80,\n            marginTop: 40\n        },\n        button2: {\n            border: '1px solid',\n            padding: 2,\n            marginLeft: 0,\n            marginTop: 40\n        },\n        buttonview: {\n            border: '1px solid',\n            padding: 5,\n            marginLeft: 37,\n            color: \"black\",\n            backgroundColor: '#F5FFFA',\n            width: 175\n        },\n        box: {\n            textAlign: 'center',\n            fontSize: 18,\n            width: '50%',\n        },\n        smallBox: {\n            height: '100%',\n            textAlign: 'center',\n            width: '50%',\n        },\n        grid:{\n            backgroundColor:'#C4E1FF',\n            padding:20,\n\n        },\n        recommandButton:{\n            width:'100%',\n            fontSize:25,\n            fontWeight:700,\n            backgroundColor:'\t#5A5AAD',\n            '&:hover':{\n                backgroundColor: '\t#BB3D00'\n            },\n            color:'white',\n            height:'70px'\n        }\n    }))\n    const classes = useStyle();\n\n\n\n    return (\n        <>\n            <div className=\"product-card bg-white\">\n                <Grid container direction='column' >\n                    <Card className={classes.card}>\n                        <CardHeader\n                            className={classes.header}\n                            avatar={<Avatar src={imgarray[1]} />}\n                            action={\n                                <IconButton aria-label=\"settings\">\n                                </IconButton>\n                            }\n                            title={productName}\n                            subheader={traderName}\n                        />\n                        \n                        <CardMedia className={classes.media} image={imgarray[0]}  />\n                    </Card>\n                </Grid>\n                <div className=\"product-card-details\">\n                    <div className=\"product-title-container\" >\n                        <ThemeProvider theme={theme}>\n                            <Typography variant=\"h1\" component=\"h2\">\n                                {productName}\n                            </Typography>\n                        </ThemeProvider>\n\n                    </div>\n                    <div>\n\n                        <span>\n                            <span className=\"text-muted\">Sold By : </span>\n                            <span className=\"product-vendor\">\n                                {traderName}\n                            </span>\n                        </span>\n\n                    </div>\n                    <div>\n                        <span>\n                            <Ratings\n                                ratings={3.5}\n                                command={500}\n                                containerClassName={\"product-rating\"}\n                                fullStarIcon={\"full-star-icon\"}\n                                halfStarIcon={\"half-star-icon\"}\n                                emptyStarIcon={\"empty-star-icon\"}\n                            />\n                        </span>\n                    </div>\n                    <div className=\"product-price-container\">\n                        <span className=\"product-price\">\n                            {/* {this.currencyKeys.name}\n                                        {productPrice(\n                                            this.product.price,\n                                            this.currencyKeys.value\n                                        )} */}\n                            NT $ {onSalePrice}\n\n                        </span>\n\n                        <span className=\"product-discount-price\">\n                            {/* {this.currencyKeys.name}\n                                            {productPrice(\n                                                this.product.discount_price,\n                                                this.currencyKeys.value\n                                            )} */}\n                            $ {originalPrice}\n                        </span>\n\n\n                        <span className=\"product-percentage-discount\">\n                            {productDiscountPrice(\n                                onSalePrice,\n                                originalPrice\n                            )}\n                        </span>\n                    </div>\n\n                    <div className=\"product-features-container\">\n                        <div className=\"product-features\">\n                            <p className=\"product-features-title text-muted\">\n                                Features:\n                            </p>\n                            <div className=\"feature-fulfillmemt\">\n                                <Feature />\n                            </div>\n                        </div>\n\n                        <div className=\"product-features\">\n                            <p className=\"product-features-title text-muted\">\n                                ExpirationDate:\n                            </p>\n                            <p\n                                className=\"feature-text feature-color\" style={{textAlign:'center'}}\n                            >\n                                {expirationDate}\n                            </p>\n                            {/* <span\n                                className=\"feature-text feature-color\"\n                            >\n                                Amount : {quantity}\n                            </span> */}\n                        </div>\n\n                        <div className=\"product-features\">\n                            <p className=\"product-features-title text-muted\">\n                                quantity:\n                            </p><p className=\"product-features-title text-muted\">{quantity}</p>\n                            {/* <div className=\"product-quantity\">\n\n                                <Button\n                                    aria-label=\"reduce\"\n                                    onClick={() => { (quality > 0) ? (setQuality(quality - 1)) : (setQuality(quality)) }}\n                                >\n                                    <RemoveIcon fontSize=\"small\" />\n                                </Button>\n                                <input\n                                    name=\"quantity\"\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    placeholder={quality}\n                                ></input>\n                                <Button\n                                    aria-label=\"increase\"\n                                    onClick={() => { setQuality(quality + 1); }}\n                                >\n                                    <AddIcon fontSize=\"small\" />\n                                </Button>\n\n                            </div> */}\n                        </div>\n\n                    </div>\n                    {/*\n                    <Grid container direction='row'>\n                        <IconButton aria-label=\"cart\">\n                            <StyledBadge badgeContent={cart} color=\"secondary\">\n                                <ShoppingCartIcon />\n                            </StyledBadge>\n                        </IconButton>\n                    </Grid>\n                     <div className=\"mt-4\">\n                        <Button\n                            variant=\"contained\"\n                            color=\"default\"\n                            // onClick = {() => { displayStatus({ type: \"error\", msg: \"already add to cart\",}) }}\n                            // type=\"button\"\n                            className=\"btn btn-primary btn-block btn-lg\"\n                            onClick={() => { addCart() }}\n                        // disabled={this.disableAddToCartButton()}\n                        // onClick={this.handleAddToCart}\n                        >\n                            Add To Cart\n                        </Button>\n                    </div> */}\n                </div>\n            </div>\n            <Button className={classes.recommandButton} onClick={() =>{ fetchRecommandInfos(address, productName, traderName)}}>點我看推薦</Button>\n            <Grid container direction='row' justify='space-evenly' className={classes.grid}>\n                      \n                {recommand.map((item, index) => (\n                    <Box >\n                        <Item props={item} key={index} />\n                    </Box>\n                ))}\n            </Grid>\n        </>\n\n    )\n\n}\nexport default Detail;\n","/Users/laiyiying/Desktop/wp-final-project-deploy/src/assests/style/Style.js",[],"/Users/laiyiying/Desktop/wp-final-project-deploy/src/api.js",[],"/Users/laiyiying/Desktop/wp-final-project-deploy/src/containers/pages/SalePage.js",["106","107","108","109"],"import React, { useState } from 'react';\nimport Container from \"@material-ui/core/Container\";\n// import {  useTheme } from '@material-ui/core/styles';\n\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nimport Typography from '@material-ui/core/Typography';\n\nimport FastfoodIcon from '@material-ui/icons/Fastfood';\n\nimport TextField from '@material-ui/core/TextField';\n\nimport { Avatar } from \"@material-ui/core\";\n\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\n\nimport MultiImageInput from 'react-multiple-image-input';\nimport useStyles from '../../assests/style/Style_sale';\nimport axios from '../../api';\nimport {v4} from 'uuid';\n\n\n\n\nexport default function NewSalePage({ userName, selectedRow, setItemEdit }) {\n\tconsole.log(\"sale\")\n\tconst id = v4();\n\tconst classes = useStyles();\n\t// const theme = useTheme();\n\tconst [open, setOpen] = React.useState(false);\n\tconst [item, setItem] = useState(selectedRow.productName || \"\");\n\tconst [onSalePrice, setonSalePrice] = useState(selectedRow.onSalePrice || 0);\n\tconst [originalPrice, setOriginalPrice] = useState(selectedRow.originalPrice || 0);\n\tconst [address, setAddress] = useState(selectedRow.address || \"\");\n\tconst [traderName, settradeName] = useState(selectedRow.traderName || userName);\n\tconst [discription, setDiscription] = useState(selectedRow.discription || \"\");\n\tconst [messages, setMessages] = useState('');\n\n\tvar initdate;\n\tvar initimages;\n    if (selectedRow.img){\n      initimages=selectedRow.img[0]\n    }\n    else{initimages={}}\n\n\t// var initimages;\n\t// if (selectedRow.imageUrl) {\n\t// \tinitimages = selectedRow.imageUrl\n\t// }\n\t// else { initimages = {} }\n\n\n\tconst dateNow = new Date(); // Creating a new date object with the current date and time\n\tconst year = dateNow.getFullYear(); // Getting current year from the created Date object\n\tconst monthWithOffset = dateNow.getUTCMonth() + 1; // January is 0 by default in JS. Offsetting +1 to fix date for calendar.\n\tconst month = // Setting current Month number from current Date object\n\t\tmonthWithOffset.toString().length < 2 // Checking if month is < 10 and pre-prending 0 to adjust for date input.\n\t\t\t? `0${monthWithOffset}`\n\t\t\t: monthWithOffset;\n\tconst date =\n\t\tdateNow.getUTCDate().toString().length < 2 // Checking if date is < 10 and pre-prending 0 if not to adjust for date input.\n\t\t\t? `0${dateNow.getUTCDate()}`\n\t\t\t: dateNow.getUTCDate();\n\n\tconst materialDateInput = `${year}-${month}-${date}`; // combining to format for defaultValue or value attribute of material <TextField>\n\n\n\tif (selectedRow.expiredate) { initdate = selectedRow.expirationDate.match(/[0-9]{4}-[0-9]{2}-[0-9]{2}/) }\n\telse { initdate = materialDateInput }\n\tconst [expirationDate, setexpirationDate] = useState(initdate);\n\tconst [quantity, setQuantity] = useState(selectedRow.quantity);\n\tconst crop = {\n\t\tunit: '%',\n\t\taspect: 4 / 4,\n\t\twidth: '100'\n\t};\n\n\n\n\n\n\tconst handleAdd = async () => {\n\t\talert('商品上傳中，請稍等')\n\t\tconst {\n\t\t\tdata: { message, sellitem },\n\t\t} = await axios.post('/api/create-item', {\n\t\t\titem,\n\t\t\tonSalePrice,\n\t\t\toriginalPrice,\n\t\t\taddress,\n\t\t\ttraderName,\n\t\t\tdiscription,\n\t\t\texpirationDate,\n\t\t\tquantity,\n\t\t\timages,\n\t\t\tuserName,\n\t\t\tid\n\t\t});\n\t\tif (!sellitem) { setMessages(message); alert('新增錯誤：' + message) }\n\t\telse { setMessages(message); alert('新增商品: ' + message); setItemEdit(false) }\n\n\t};\n\t//const [images, setImages] = useState(selectedRow.imageUrl || \"\");\n\tconst [images, setImages] = useState(initimages);\n\tconst handleHookChange = (func) => (event) => {\n\t\tfunc(event.target.value);\n\t};\n\tconst handleReg = (event) => {\n\t\tevent.preventDefault();\n\t\tsetItem(\"\");\n\t\tsetImages({});\n\t\tsetQuantity(0);\n\t\tsetAddress(\"\");\n\t\tsettradeName(\"\");\n\t\tsetonSalePrice(0);\n\t\tsetOriginalPrice(0);\n\t\tsetDiscription('');\n\t\tsetexpirationDate(materialDateInput);\n\n\t};\n\t// const handleDrawerOpen = () => {\n\t// \tsetOpen(true);\n\t// };\n\n\t// const handleDrawerClose = () => {\n\t// \tsetOpen(false);\n\t// };\n\n\treturn (\n\t\t<>\n\t<Container component=\"main\" maxWidth=\"xs\">\n\t\t\t<CssBaseline />\n\t\t\t\t<div className={classes.paper}>\n\t\t\t\t\t<Avatar className={classes.avatar}>\n\t\t\t\t\t\t<FastfoodIcon />\n\t\t\t\t\t</Avatar>\n\t\t\t\t\t<Typography component=\"h1\" variant=\"h5\">\n\t\t\t\t\t\t上架商品\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<form className={classes.form} onSubmit={handleReg}>\n\t\t\t\t\t\t<Grid container spacing={2}>\n\t\t\t\t\t\t\t<Grid item xs={12} sm={6}>\n\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\t\t\t\t\tname=\"item\"\n\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\tid=\"item\"\n\t\t\t\t\t\t\t\t\tlabel=\"商品名稱\"\n\t\t\t\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\t\t\t\tvalue={item}\n\t\t\t\t\t\t\t\t\tonChange={handleHookChange(setItem)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t<Grid item xs={12} sm={6}>\n\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\tid=\"quantity\"\n\t\t\t\t\t\t\t\t\tlabel=\"數量\"\n\t\t\t\t\t\t\t\t\tname=\"quantity\"\n\t\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\t\t\t\t\tvalue={quantity}\n\t\t\t\t\t\t\t\t\tonChange={handleHookChange(setQuantity)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t{/* <Grid item xs={12}>\n\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\tid=\"tradername\"\n\t\t\t\t\t\t\t\t\tlabel=\"商家名稱\"\n\t\t\t\t\t\t\t\t\tname=\"tradername\"\n\t\t\t\t\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\t\t\t\t\tvalue={traderName}\n\t\t\t\t\t\t\t\t\tonChange={handleHookChange(settradeName)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Grid> */}\n\t\t\t\t\t\t\t<Grid item xs={12} sm={6}>\n\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\t\t\t\t\tname=\"originalprice\"\n\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\tid=\"originalprice\"\n\t\t\t\t\t\t\t\t\tlabel=\"原價\"\n\t\t\t\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\t\t\t\tvalue={originalPrice}\n\t\t\t\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\t\t\t\tinputProps={{ min: 0 }}\n\t\t\t\t\t\t\t\t\tonChange={handleHookChange(setOriginalPrice)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t<Grid item xs={12} sm={6}>\n\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\tid=\"onsaleprice\"\n\t\t\t\t\t\t\t\t\tlabel=\"特價\"\n\t\t\t\t\t\t\t\t\tname=\"onsaleprice\"\n\t\t\t\t\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t\t\tinputProps={{ min: 0 }}\n\t\t\t\t\t\t\t\t\tvalue={onSalePrice}\n\t\t\t\t\t\t\t\t\tonChange={handleHookChange(setonSalePrice)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\tid=\"address\"\n\t\t\t\t\t\t\t\t\tlabel=\"商家地址\"\n\t\t\t\t\t\t\t\t\tname=\"address\"\n\t\t\t\t\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\t\t\t\t\tvalue={address}\n\t\t\t\t\t\t\t\t\tonChange={handleHookChange(setAddress)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\tname=\"expiredate\"\n\t\t\t\t\t\t\t\t\tlabel=\"賞味期限\"\n\t\t\t\t\t\t\t\t\ttype=\"expiredate\"\n\t\t\t\t\t\t\t\t\tid=\"expiredate\"\n\t\t\t\t\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\t\t\t\t\ttype=\"date\"\n\t\t\t\t\t\t\t\t\tvalue={expirationDate}\n\t\t\t\t\t\t\t\t\tonChange={handleHookChange(setexpirationDate)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\tname=\"discription\"\n\t\t\t\t\t\t\t\t\tlabel=\"商品描述\"\n\t\t\t\t\t\t\t\t\ttype=\"discription\"\n\t\t\t\t\t\t\t\t\tid=\"discription\"\n\t\t\t\t\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\t\t\t\t\tvalue={discription}\n\t\t\t\t\t\t\t\t\tonChange={handleHookChange(setDiscription)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\n\n\t\t\t\t\t\t<Grid container>\n\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t<Typography variant=\"h6\">\n\t\t\t\t\t\t\t\t\t照片\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t<Typography variant=\"h7\">\n\t\t\t\t\t\t\t\t\t第一張請放入商品照，第二張請放入商家照\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t<MultiImageInput\n\t\t\t\t\t\t\t\t\tmax={2}\n\t\t\t\t\t\t\t\t\timages={images}\n\t\t\t\t\t\t\t\t\tsetImages={setImages}\n\t\t\t\t\t\t\t\t\tcropConfig={{ crop, ruleOfThirds: true }}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t{/* <img src = {images}></img> */}\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\t\tclassName={classes.submit}\n\t\t\t\t\t\t\tonClick={handleAdd}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t送出\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</form>\n\n\t\t\t\t</div>\n\n\t\t\t\t</Container>\n\t\t</>\n\t);\n}","/Users/laiyiying/Desktop/wp-final-project-deploy/src/containers/pages/Manage.js",["110","111","112"],"import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport AddIcon from '@material-ui/icons/Add';\nimport axios from '../../api';\nimport { Redirect } from \"react-router-dom\";\n\n\n\n// function createData(productName, address, imageUrl, avatarUrl, traderName, discription, expirationDate, onSalePrice, originalPrice, quantity, id) {\n//     return { productName, address, imageUrl, avatarUrl, traderName, discription, expirationDate, onSalePrice, originalPrice, quantity, id };\n// }\n\n\nfunction descendingComparator(a, b, orderBy) {\n    if (b[orderBy] < a[orderBy]) {\n        return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n        return 1;\n    }\n    return 0;\n}\n\nfunction getComparator(order, orderBy) {\n    return order === 'desc'\n        ? (a, b) => descendingComparator(a, b, orderBy)\n        : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n    const stabilizedThis = array.map((el, index) => [el, index]);\n    stabilizedThis.sort((a, b) => {\n        const order = comparator(a[0], b[0]);\n        if (order !== 0) return order;\n        return a[1] - b[1];\n    });\n    return stabilizedThis.map((el) => el[0]);\n}\n\nconst headCells = [\n    { id: 'productName', numeric: false, disablePadding: true, label: 'Product ' },\n    { id: 'address', numeric: true, disablePadding: false, label: 'Address' },\n    { id: 'imageUrl', numeric: true, disablePadding: false, label: 'Img' },\n    { id: 'avatarUrl', numeric: true, disablePadding: false, label: 'Img' },\n    { id: 'traderName', numeric: true, disablePadding: false, label: 'traderName' },\n    { id: 'discription', numeric: true, disablePadding: false, label: 'discription' },\n    { id: 'expirationDate', numeric: true, disablePadding: false, label: 'expirationDate' },\n    { id: 'onSalePrice', numeric: true, disablePadding: false, label: 'onSalePrice' },\n    { id: 'originalPrice', numeric: true, disablePadding: false, label: 'originalPrice' },\n    { id: 'quantity', numeric: true, disablePadding: false, label: 'quantity' },\n\n];\n\nfunction EnhancedTableHead(props) {\n    const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n    const createSortHandler = (property) => (event) => {\n        onRequestSort(event, property);\n    };\n\n    return (\n        <TableHead>\n            <TableRow>\n                <TableCell padding=\"checkbox\">\n                    <Checkbox\n                        indeterminate={numSelected > 0 && numSelected < rowCount}\n                        checked={rowCount > 0 && numSelected === rowCount}\n                        onChange={onSelectAllClick}\n                        inputProps={{ 'aria-label': 'select all desserts' }}\n                    />\n                </TableCell>\n                {headCells.map((headCell) => (\n                    <TableCell\n                        key={headCell.id}\n                        align={headCell.numeric ? 'right' : 'left'}\n                        padding={headCell.disablePadding ? 'none' : 'default'}\n                        sortDirection={orderBy === headCell.id ? order : false}\n                    >\n                        <TableSortLabel\n                            active={orderBy === headCell.id}\n                            direction={orderBy === headCell.id ? order : 'asc'}\n                            onClick={createSortHandler(headCell.id)}\n                        >\n                            {headCell.label}\n                            {orderBy === headCell.id ? (\n                                <span className={classes.visuallyHidden}>\n                                    {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                                </span>\n                            ) : null}\n                        </TableSortLabel>\n                    </TableCell>\n                ))}\n            </TableRow>\n        </TableHead>\n    );\n}\n\nEnhancedTableHead.propTypes = {\n    classes: PropTypes.object.isRequired,\n    numSelected: PropTypes.number.isRequired,\n    onRequestSort: PropTypes.func.isRequired,\n    onSelectAllClick: PropTypes.func.isRequired,\n    order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n    orderBy: PropTypes.string.isRequired,\n    rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles((theme) => ({\n    root: {\n        paddingLeft: theme.spacing(2),\n        paddingRight: theme.spacing(1),\n        //color\n        backgroundColor: theme.palette.divider\n    },\n    highlight:\n        theme.palette.type === 'light'\n            ? {\n                color: theme.palette.secondary.main,\n                backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n            }\n            : {\n                color: theme.palette.text.primary,\n                backgroundColor: theme.palette.secondary.dark,\n            },\n    title: {\n        flex: '1 1 100%',\n    },\n}));\n\n\n\n\n\nconst EnhancedTableToolbar = (props) => {\n    const classes = useToolbarStyles();\n    const { numSelected, selected, selectedRow, fetchProductInfos, userName, setItemEdit, setSelectedRow } = props;\n    const [isEdit, setEdit] = useState(false);\n\n    async function deleteItems(row) {\n        const tradername = row.traderName;\n        const item = row.productName;\n        const quantity = row.quantity;\n        const onsaleprice = row.onSalePrice;\n        const {\n            data: { message },\n        } = await axios.post('/api/delete-item', { tradername, item, quantity, onsaleprice })\n        alert(message);\n        selected.splice(0, 1);\n\n    }\n    return (\n        <Toolbar\n            className={clsx(classes.root, {\n                [classes.highlight]: numSelected > 0,\n            })}\n        > {isEdit && <Redirect to={{ pathname: '/my-shop', state: { curUserInfo: selected } }} />}\n            {numSelected > 0 ? (\n                <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\n                    {numSelected} selected\n                </Typography>\n            ) : (\n                <Typography className={classes.title} color=\"white\" variant=\"h6\" id=\"tableTitle\" component=\"div\">\n                    Edit/Delete/Create\n                </Typography>\n            )}\n\n            {numSelected > 0 ? (\n                <>\n                    <Tooltip title=\"Delete\">\n                        <IconButton aria-label=\"delete\" onClick={() => { deleteItems(selectedRow); fetchProductInfos(userName) }}>\n                            <DeleteIcon />\n                        </IconButton>\n                    </Tooltip>\n\n                    <Tooltip title=\"Edit\">\n                        <IconButton aria-label=\"edit\" onClick={() => { alert('edit'); console.log(selected); setItemEdit(true) }}>\n                            <EditIcon />\n                        </IconButton>\n                    </Tooltip>\n                </>\n            ) : (\n                <>\n                    <Tooltip title=\"Filter list\">\n                        <IconButton aria-label=\"filter list\" onClick={() => { console.log('click') }}>\n                            <FilterListIcon />\n                        </IconButton>\n                    </Tooltip>\n                    <Tooltip title=\"Add Item\">\n                        <IconButton aria-label=\"add item\" onClick={() => { setSelectedRow([]); setItemEdit(true) }}>\n                            <AddIcon />\n                        </IconButton>\n                    </Tooltip>\n                </>\n            )}\n        </Toolbar>\n    );\n};\n\nEnhancedTableToolbar.propTypes = {\n    numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        marginTop: theme.spacing(10),\n    },\n    paper: {\n        width: '100%',\n        marginBottom: theme.spacing(2),\n    },\n    table: {\n        minWidth: 750,\n    },\n    visuallyHidden: {\n        border: 0,\n        clip: 'rect(0 0 0 0)',\n        height: 1,\n        margin: -1,\n        overflow: 'hidden',\n        padding: 0,\n        position: 'absolute',\n        top: 20,\n        width: 1,\n    },\n}));\n\nexport default function NewEnhancedTable({ userName, selectedRow, setSelectedRow, itemEdit, setItemEdit, isSearch, searchType, searchString, setSearch }) {\n    const classes = useStyles();\n    const [order, setOrder] = useState('asc');\n    const [orderBy, setOrderBy] = useState('calories');\n    const [selected, setSelected] = useState([]);\n    //const [selectedRow, setSelectedRow]=useState([]);\n    const [page, setPage] = useState(0);\n    const [dense, setDense] = useState(true);\n    const [rowsPerPage, setRowsPerPage] = useState(10);\n    const [productInfos, setProductInfos] = useState([]);\n    useEffect(() => {\n        console.log(userName)\n        fetchProductInfos(userName);\n    }, []);\n    console.log(isSearch)\n    console.log(searchType)\n    console.log(searchString.length)\n    const fetchProductInfos = async (userName, searchType, searchString) => {\n        try {\n            let queryParams = { userName };\n            console.log(userName);\n            if (searchType && searchString) queryParams = { userName: userName, searchString: searchString, searchType: searchType };\n            console.log(queryParams);\n            const {\n                data: { messages, message },\n            } = await axios.post('/api/search-item-by-user', queryParams)\n            console.log(messages)\n            if (!messages) alert(message);\n            else setProductInfos(messages);\n\n        } catch (error) {\n            throw Error('When fetching product info => Error ' + error);\n        }\n    };\n    // if (isSearch) {\n    //   fetchProductInfos(userName,searchType, searchString);\n    //   console.log(\"searching\");\n    //   setSearch(false);\n\n    // } \n    useEffect(() => {\n        fetchProductInfos(userName, searchType, searchString);\n        console.log(\"searching\");\n    }, [searchType]);\n\n    const rows = productInfos\n\n    const handleRequestSort = (event, property) => {\n        const isAsc = orderBy === property && order === 'asc';\n        setOrder(isAsc ? 'desc' : 'asc');\n        setOrderBy(property);\n    };\n\n    const handleSelectAllClick = (event) => {\n        if (event.target.checked) {\n            const newSelecteds = rows.map((n) => n.productName);\n            setSelected(newSelecteds);\n            return;\n        }\n        setSelected([]);\n    };\n\n    // const handleClick1 = (event, name) => {\n\n    //     const selectedIndex = selected.indexOf(name);\n\n    //     let newSelected = [];\n\n    //     if (selectedIndex === -1) {\n    //         newSelected = newSelected.concat(selected, name);\n    //     } else if (selectedIndex === 0) {\n    //         newSelected = newSelected.concat(selected.slice(1));\n    //     } else if (selectedIndex === selected.length - 1) {\n    //         newSelected = newSelected.concat(selected.slice(0, -1));\n    //     } else if (selectedIndex > 0) {\n    //         newSelected = newSelected.concat(\n    //             selected.slice(0, selectedIndex),\n    //             selected.slice(selectedIndex + 1),\n    //         );\n    //     }\n    //     console.log(newSelected)\n    //     setSelected(newSelected);\n    // };\n\n    const handleClick = (event, name, row) => {\n        const selectedIndex = selected.indexOf(name);\n        if (selectedIndex === -1) {\n            setSelected([name]);\n            setSelectedRow(row);\n        }\n        else {\n            setSelected([]);\n            setSelectedRow([]);\n        }\n\n\n    };\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0);\n    };\n\n    const handleChangeDense = (event) => {\n        setDense(event.target.checked);\n    };\n\n    const isSelected = (name) => selected.indexOf(name) !== -1;\n\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n    console.log(productInfos)\n\n    return (\n        <div className={classes.root}>\n\n            <Paper className={classes.paper}>\n                <div className='App-title' >\n                    <h1 >上架商品一覽表</h1>\n                </div>\n                <EnhancedTableToolbar numSelected={selected.length} selected={selected} selectedRow={selectedRow} setSelectedRow={setSelectedRow} fetchProductInfos={fetchProductInfos} userName={userName} setItemEdit={setItemEdit} />\n                <TableContainer>\n                    <Table\n                        className={classes.table}\n                        aria-labelledby=\"tableTitle\"\n                        size={dense ? 'small' : 'medium'}\n                        aria-label=\"enhanced table\"\n                    >\n                        <EnhancedTableHead\n                            classes={classes}\n                            numSelected={selected.length}\n                            order={order}\n                            orderBy={orderBy}\n                            onSelectAllClick={handleSelectAllClick}\n                            onRequestSort={handleRequestSort}\n                            rowCount={rows.length}\n                        />\n                        <TableBody>\n                            {stableSort(rows, getComparator(order, orderBy))\n                                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                                .map((row, index) => {\n                                    const isItemSelected = isSelected(row._id);\n                                    const labelId = `enhanced-table-checkbox-${index}`;\n\n                                    return (\n                                        <TableRow\n                                            hover\n                                            onClick={(event) => handleClick(event, row._id, row)}\n                                            role=\"checkbox\"\n                                            aria-checked={isItemSelected}\n                                            tabIndex={-1}\n                                            key={row._id}\n                                            selected={isItemSelected}\n                                        >\n                                            <TableCell padding=\"checkbox\">\n                                                <Checkbox\n                                                    checked={isItemSelected}\n                                                    inputProps={{ 'aria-labelledby': labelId }}\n                                                />\n                                            </TableCell>\n                                            <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\n                                                {row.productName}\n                                            </TableCell>\n                                            <TableCell align=\"right\">{row.address}</TableCell>\n                                            <TableCell align=\"right\"><img src={row.img[0]['0']} alt='pic1'></img></TableCell>\n                                            <TableCell align=\"right\"><img src={row.img[0]['1']} alt='pic2'></img></TableCell>\n                                            {/* <TableCell align=\"right\"><img src={row.imageUrl}></img></TableCell>\n                                            <TableCell align=\"right\"><img src={row.avatarUrl}></img></TableCell> */}\n                                            <TableCell align=\"right\">{row.traderName}</TableCell>\n                                            <TableCell align=\"right\">{row.discription}</TableCell>\n                                            <TableCell align=\"right\">{row.expirationDate}</TableCell>\n                                            <TableCell align=\"right\">{row.onSalePrice}</TableCell>\n                                            <TableCell align=\"right\">{row.originalPrice}</TableCell>\n                                            <TableCell align=\"right\">{row.quantity}</TableCell>\n                                        </TableRow>\n                                    );\n                                })}\n                            {emptyRows > 0 && (\n                                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\n                                    <TableCell colSpan={6} />\n                                </TableRow>\n                            )}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[5, 10]}\n                    component=\"div\"\n                    count={rows.length}\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    onChangePage={handleChangePage}\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\n                />\n            </Paper>\n            <FormControlLabel\n                control={<Switch checked={dense} onChange={handleChangeDense} />}\n                label=\"Dense padding\"\n            />\n\n\n        </div>\n\n    );\n}","/Users/laiyiying/Desktop/wp-final-project-deploy/src/containers/pages/product_details/feature.js",[],"/Users/laiyiying/Desktop/wp-final-project-deploy/src/containers/pages/product_details/rating.js",[],"/Users/laiyiying/Desktop/wp-final-project-deploy/src/components/Item.js",[],"/Users/laiyiying/Desktop/wp-final-project-deploy/src/constants/constant.js",[],"/Users/laiyiying/Desktop/wp-final-project-deploy/src/constants/cosntantLogout.js",[],"/Users/laiyiying/Desktop/wp-final-project-deploy/src/containers/pages/sections/MediaSection.js",[],"/Users/laiyiying/Desktop/wp-final-project-deploy/src/containers/pages/product_details/icons.js",[],"/Users/laiyiying/Desktop/wp-final-project-deploy/src/assests/style/Style_sale.js",[],{"ruleId":"113","severity":1,"message":"114","line":40,"column":8,"nodeType":"115","endLine":40,"endColumn":20,"suggestions":"116"},{"ruleId":"117","severity":1,"message":"118","line":4,"column":27,"nodeType":"119","messageId":"120","endLine":4,"endColumn":33},{"ruleId":"117","severity":1,"message":"121","line":4,"column":35,"nodeType":"119","messageId":"120","endLine":4,"endColumn":41},{"ruleId":"117","severity":1,"message":"122","line":4,"column":43,"nodeType":"119","messageId":"120","endLine":4,"endColumn":48},{"ruleId":"113","severity":1,"message":"123","line":52,"column":7,"nodeType":"115","endLine":52,"endColumn":9,"suggestions":"124"},{"ruleId":"113","severity":1,"message":"125","line":35,"column":8,"nodeType":"115","endLine":35,"endColumn":10,"suggestions":"126"},{"ruleId":"117","severity":1,"message":"127","line":114,"column":11,"nodeType":"119","messageId":"120","endLine":114,"endColumn":22},{"ruleId":"117","severity":1,"message":"128","line":31,"column":9,"nodeType":"119","messageId":"120","endLine":31,"endColumn":13},{"ruleId":"117","severity":1,"message":"129","line":31,"column":15,"nodeType":"119","messageId":"120","endLine":31,"endColumn":22},{"ruleId":"117","severity":1,"message":"130","line":38,"column":9,"nodeType":"119","messageId":"120","endLine":38,"endColumn":17},{"ruleId":"131","severity":1,"message":"132","line":238,"column":10,"nodeType":"133","endLine":238,"endColumn":21},{"ruleId":"117","severity":1,"message":"134","line":157,"column":20,"nodeType":"119","messageId":"120","endLine":157,"endColumn":27},{"ruleId":"113","severity":1,"message":"135","line":261,"column":8,"nodeType":"115","endLine":261,"endColumn":10,"suggestions":"136"},{"ruleId":"113","severity":1,"message":"137","line":291,"column":8,"nodeType":"115","endLine":291,"endColumn":20,"suggestions":"138"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'searchString' and 'setSearch'. Either include them or remove the dependency array. If 'setSearch' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["139"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'Route' is defined but never used.","React Hook useEffect has a missing dependency: 'items'. Either include it or remove the dependency array.",["140"],"React Hook useEffect has a missing dependency: 'fetchDetailInfos'. Either include it or remove the dependency array.",["141"],"'StyledBadge' is assigned a value but never used.","'open' is assigned a value but never used.","'setOpen' is assigned a value but never used.","'messages' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'setEdit' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'userName'. Either include it or remove the dependency array.",["142"],"React Hook useEffect has missing dependencies: 'searchString' and 'userName'. Either include them or remove the dependency array.",["143"],{"desc":"144","fix":"145"},{"desc":"146","fix":"147"},{"desc":"148","fix":"149"},{"desc":"150","fix":"151"},{"desc":"152","fix":"153"},"Update the dependencies array to be: [searchString, searchType, setSearch]",{"range":"154","text":"155"},"Update the dependencies array to be: [items]",{"range":"156","text":"157"},"Update the dependencies array to be: [fetchDetailInfos]",{"range":"158","text":"159"},"Update the dependencies array to be: [userName]",{"range":"160","text":"161"},"Update the dependencies array to be: [searchString, searchType, userName]",{"range":"162","text":"163"},[1359,1371],"[searchString, searchType, setSearch]",[1192,1194],"[items]",[1164,1166],"[fetchDetailInfos]",[9905,9907],"[userName]",[11006,11018],"[searchString, searchType, userName]"]