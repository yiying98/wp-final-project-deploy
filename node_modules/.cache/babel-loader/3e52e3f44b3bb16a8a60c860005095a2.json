{"ast":null,"code":"import _defineProperty from\"/Users/laiyiying/Desktop/wp-final-project-deploy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _slicedToArray from\"/Users/laiyiying/Desktop/wp-final-project-deploy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";// import clsx from 'clsx';\n// import * as Constant from '../constants/constant';\n// import Drawer from '@material-ui/core/Drawer';\n// import Grid from '@material-ui/core/Grid';\n// import AppBar from '@material-ui/core/AppBar';\n// import Toolbar from '@material-ui/core/Toolbar';\n// import Typography from '@material-ui/core/Typography';\n// import IconButton from '@material-ui/core/IconButton';\n// import MenuIcon from '@material-ui/icons/Menu';\n// import TextField from '@material-ui/core/TextField';\n// import Button from \"@material-ui/core/Button\";\n// import { useTheme } from '@material-ui/core/styles';\n// import useStyles from '../assests/style/Style.js';\n// import { useState } from 'react';\n// import { Divider, List, ListItem, ListItemIcon, ListItemText } from '@material-ui/core';\n// import ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\n// import ChevronRightIcon from '@material-ui/icons/ChevronRight';\n// import { Link } from \"react-router-dom\";\n// const FixedAppBar = ({pageComponent}) => {\n//     const classes = useStyles();\n//     const theme = useTheme();\n//     const [open, setOpen] = useState(false);\n//     const handleDrawerOpen = () => {\n//         setOpen(true);\n//     };\n//     const handleDrawerClose = () => {\n//         setOpen(false);\n//     };\n//     return (\n//         <>\n//             <AppBar\n//             style={{backgroundColor:'#4F4F4F'}}\n//                 position=\"fixed\"\n//                 className={clsx(classes.appBar, {\n//                     [classes.appBarShift]: open,\n//                 })}\n//             >\n//                 <Toolbar>\n//                     <IconButton\n//                         color=\"inherit\"\n//                         aria-label=\"open drawer\"\n//                         onClick={handleDrawerOpen}\n//                         edge=\"start\"\n//                         className={clsx(classes.menuButton, open && classes.hide)}\n//                     >\n//                         <MenuIcon />\n//                     </IconButton>\n//                     <Typography variant=\"h6\" noWrap>\n//                         {Constant.appName}\n//                     </Typography>\n//                     {/* <TextField\n//                         variant='outlined'\n//                         type='search'\n//                         color='secondary'\n//                         placeholder='想要吃甚麼呢?'\n//                         size='small'\n//                         fullWidth\n//                         disabled={false}\n//                         className={classes.textfield}\n//                     ></TextField> */}\n//                     <Grid  direction='row' className={classes.appbar} >\n//                         {Constant.appBarList.map((text, index) => (\n//                             <Link to={Constant.appBarListRoute[index]} key={index} style={{ textDecoration: 'none' }}>\n//                                 <Button\n//                                     startIcon={Constant.appBarListIcon[index]}\n//                                     style={{ color: 'white' }}\n//                                 >\n//                                     {text}\n//                                 </Button>\n//                             </Link>\n//                         ))}\n//                     </Grid>\n//                 </Toolbar>\n//             </AppBar>\n//             <Drawer\n//                 className={classes.drawer}\n//                 variant=\"persistent\"\n//                 anchor=\"left\"\n//                 open={open}\n//                 classes={{\n//                     paper: classes.drawerPaper,\n//                 }}\n//             >\n//                 <div className={classes.drawerHeader}>\n//                     <IconButton onClick={handleDrawerClose}>\n//                         {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n//                     </IconButton>\n//                 </div>\n//                 <Divider />\n//                 <List>\n//                     {Constant.menuList.map((text, index) => (\n//                         <Link to={Constant.menuListRoute[index]} key={index} style={{ textDecoration: 'none' }}>\n//                             <ListItem button key={text}>\n//                             <ListItemIcon>{Constant.menuListIcon[index]}</ListItemIcon>\n//                             <ListItemText primary={text} />\n//                             </ListItem>\n//                         </Link>\n//                     ))}\n//                 </List>\n//             </Drawer>\n//             <main\n//                 style={{ backgroundColor: '#D0D0D0' }}\n//                 className={clsx(classes.content, {\n//                     [classes.contentShift]: open,\n//                 })}\n//             >\n//             {pageComponent}\n//             </main>\n//         </>\n//     );\n// }\n// export default FixedAppBar;\nimport clsx from'clsx';import*as Constant from'../constants/constant';import*as ConstantLogout from'../constants/cosntantLogout';import Drawer from'@material-ui/core/Drawer';import Grid from'@material-ui/core/Grid';import AppBar from'@material-ui/core/AppBar';import Toolbar from'@material-ui/core/Toolbar';import Typography from'@material-ui/core/Typography';import IconButton from'@material-ui/core/IconButton';import MenuIcon from'@material-ui/icons/Menu';import TextField from'@material-ui/core/TextField';import Button from\"@material-ui/core/Button\";import{useTheme}from'@material-ui/core/styles';import useStyles from'../assests/style/Style.js';import{useState}from'react';import{Divider,List,ListItem,ListItemIcon,ListItemText}from'@material-ui/core';import ChevronLeftIcon from'@material-ui/icons/ChevronLeft';import ChevronRightIcon from'@material-ui/icons/ChevronRight';import SearchIcon from'@material-ui/icons/Search';import MenuItem from'@material-ui/core/MenuItem';import Select from'@material-ui/core/Select';import{Link}from\"react-router-dom\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var FixedAppBar=function FixedAppBar(_ref){var pageComponent=_ref.pageComponent,isLogin=_ref.isLogin,loggedin=_ref.loggedin,serachItem=_ref.serachItem,searchType=_ref.searchType,searchString=_ref.searchString,setSearch=_ref.setSearch,user=_ref.user;console.log(isLogin);console.log(user);var classes=useStyles();var theme=useTheme();var _useState=useState(false),_useState2=_slicedToArray(_useState,2),open=_useState2[0],setOpen=_useState2[1];var handleDrawerOpen=function handleDrawerOpen(){setOpen(true);};var handleDrawerClose=function handleDrawerClose(){setOpen(false);};var handleLogout=function handleLogout(e){console.log(e.currentTarget.value);if(e.currentTarget.value===\"2\"){alert(\"logout\");loggedin(false,null);}};var handleEnterSearch=function handleEnterSearch(e){if(e.key==='Enter'&&searchString){console.log(searchType,searchString);setSearch(true);}};var handleClickSearch=function handleClickSearch(){if(searchString){console.log(searchType,searchString);setSearch(true);}if(searchType===\"all\"){serachItem(searchType,\"all\");setSearch(true);}};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(AppBar,{style:{backgroundColor:'#4F4F4F'},position:\"fixed\",className:clsx(classes.appBar,_defineProperty({},classes.appBarShift,open)),children:/*#__PURE__*/_jsxs(Toolbar,{children:[/*#__PURE__*/_jsx(IconButton,{color:\"inherit\",\"aria-label\":\"open drawer\",onClick:handleDrawerOpen,edge:\"start\",className:clsx(classes.menuButton,open&&classes.hide),children:/*#__PURE__*/_jsx(MenuIcon,{})}),/*#__PURE__*/_jsx(Typography,{variant:\"h6\",noWrap:true,children:Constant.appName}),/*#__PURE__*/_jsx(TextField,{variant:\"outlined\",type:\"search\",color:\"secondary\",placeholder:\"\\u60F3\\u8981\\u5403\\u751A\\u9EBC\\u5462?\",size:\"small\",fullWidth:true,className:classes.textfield,onChange:function onChange(e){return serachItem(searchType,e.target.value);},onKeyDown:handleEnterSearch}),/*#__PURE__*/_jsxs(Select,{className:classes.select,value:searchType,onChange:function onChange(e){return serachItem(e.target.value,searchString);},children:[/*#__PURE__*/_jsx(MenuItem,{value:\"productName\",children:\"\\u5546\\u54C1\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"traderName\",children:\"\\u5E97\\u5BB6\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"address\",children:\"\\u5730\\u5740\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"all\",children:\"ALL\"})]}),/*#__PURE__*/_jsx(Button,{className:classes.searchButton,onClick:handleClickSearch,startIcon:/*#__PURE__*/_jsx(SearchIcon,{style:{color:'white'}}),children:\"\\u641C\\u5C0B\"}),/*#__PURE__*/_jsxs(Grid,{direction:\"row\",className:classes.appbar,children:[isLogin===true?ConstantLogout.appBarList.map(function(text,index){return/*#__PURE__*/_jsx(Link,{to:ConstantLogout.appBarListRoute[index],style:{textDecoration:'none'},children:/*#__PURE__*/_jsx(Button,{value:index,startIcon:ConstantLogout.appBarListIcon[index],style:{color:'white'},onClick:function onClick(e){handleLogout(e);},children:text})},index);}):Constant.appBarList.map(function(text,index){return/*#__PURE__*/_jsx(Link,{to:Constant.appBarListRoute[index],style:{textDecoration:'none'},children:/*#__PURE__*/_jsx(Button,{value:index,startIcon:Constant.appBarListIcon[index],style:{color:'white'},children:text})},index);}),/*#__PURE__*/_jsx(Button,{startIcon:Constant.appBarListIcon[1],style:{color:'white'},children:user})]})]})}),/*#__PURE__*/_jsxs(Drawer,{className:classes.drawer,variant:\"persistent\",anchor:\"left\",open:open,classes:{paper:classes.drawerPaper},children:[/*#__PURE__*/_jsx(\"div\",{className:classes.drawerHeader,children:/*#__PURE__*/_jsx(IconButton,{onClick:handleDrawerClose,children:theme.direction==='ltr'?/*#__PURE__*/_jsx(ChevronLeftIcon,{}):/*#__PURE__*/_jsx(ChevronRightIcon,{})})}),/*#__PURE__*/_jsx(Divider,{}),/*#__PURE__*/_jsx(List,{children:isLogin===true?ConstantLogout.menuList.map(function(text,index){return/*#__PURE__*/_jsx(Link,{to:ConstantLogout.menuListRoute[index],style:{textDecoration:'none'},children:/*#__PURE__*/_jsxs(ListItem,{button:true,children:[/*#__PURE__*/_jsx(ListItemIcon,{children:ConstantLogout.menuListIcon[index]}),/*#__PURE__*/_jsx(ListItemText,{primary:text})]},text)},index);}):Constant.menuList.map(function(text,index){return/*#__PURE__*/_jsx(Link,{to:Constant.menuListRoute[index],style:{textDecoration:'none'},children:/*#__PURE__*/_jsxs(ListItem,{button:true,children:[/*#__PURE__*/_jsx(ListItemIcon,{children:Constant.menuListIcon[index]}),/*#__PURE__*/_jsx(ListItemText,{primary:text})]},text)},index);})})]}),/*#__PURE__*/_jsx(\"main\",{style:{backgroundColor:'#D0D0D0'},className:clsx(classes.content,_defineProperty({},classes.contentShift,open)),children:pageComponent})]});};export default FixedAppBar;","map":{"version":3,"sources":["/Users/laiyiying/Desktop/wp-final-project-deploy/src/containers/FixedAppBar.js"],"names":["clsx","Constant","ConstantLogout","Drawer","Grid","AppBar","Toolbar","Typography","IconButton","MenuIcon","TextField","Button","useTheme","useStyles","useState","Divider","List","ListItem","ListItemIcon","ListItemText","ChevronLeftIcon","ChevronRightIcon","SearchIcon","MenuItem","Select","Link","FixedAppBar","pageComponent","isLogin","loggedin","serachItem","searchType","searchString","setSearch","user","console","log","classes","theme","open","setOpen","handleDrawerOpen","handleDrawerClose","handleLogout","e","currentTarget","value","alert","handleEnterSearch","key","handleClickSearch","backgroundColor","appBar","appBarShift","menuButton","hide","appName","textfield","target","select","searchButton","color","appbar","appBarList","map","text","index","appBarListRoute","textDecoration","appBarListIcon","drawer","paper","drawerPaper","drawerHeader","direction","menuList","menuListRoute","menuListIcon","content","contentShift"],"mappings":"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","sourcesContent":["// import clsx from 'clsx';\n// import * as Constant from '../constants/constant';\n// import Drawer from '@material-ui/core/Drawer';\n// import Grid from '@material-ui/core/Grid';\n// import AppBar from '@material-ui/core/AppBar';\n// import Toolbar from '@material-ui/core/Toolbar';\n\n// import Typography from '@material-ui/core/Typography';\n\n// import IconButton from '@material-ui/core/IconButton';\n// import MenuIcon from '@material-ui/icons/Menu';\n\n// import TextField from '@material-ui/core/TextField';\n// import Button from \"@material-ui/core/Button\";\n// import { useTheme } from '@material-ui/core/styles';\n// import useStyles from '../assests/style/Style.js';\n// import { useState } from 'react';\n// import { Divider, List, ListItem, ListItemIcon, ListItemText } from '@material-ui/core';\n// import ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\n// import ChevronRightIcon from '@material-ui/icons/ChevronRight';\n// import { Link } from \"react-router-dom\";\n\n// const FixedAppBar = ({pageComponent}) => {\n\n//     const classes = useStyles();\n//     const theme = useTheme();\n//     const [open, setOpen] = useState(false);\n\n//     const handleDrawerOpen = () => {\n//         setOpen(true);\n//     };\n\n//     const handleDrawerClose = () => {\n//         setOpen(false);\n//     };\n\n//     return (\n//         <>\n//             <AppBar\n//             style={{backgroundColor:'#4F4F4F'}}\n//                 position=\"fixed\"\n//                 className={clsx(classes.appBar, {\n//                     [classes.appBarShift]: open,\n//                 })}\n//             >\n//                 <Toolbar>\n//                     <IconButton\n//                         color=\"inherit\"\n//                         aria-label=\"open drawer\"\n//                         onClick={handleDrawerOpen}\n//                         edge=\"start\"\n//                         className={clsx(classes.menuButton, open && classes.hide)}\n//                     >\n//                         <MenuIcon />\n//                     </IconButton>\n//                     <Typography variant=\"h6\" noWrap>\n//                         {Constant.appName}\n//                     </Typography>\n\n//                     {/* <TextField\n//                         variant='outlined'\n//                         type='search'\n//                         color='secondary'\n//                         placeholder='想要吃甚麼呢?'\n//                         size='small'\n//                         fullWidth\n//                         disabled={false}\n//                         className={classes.textfield}\n//                     ></TextField> */}\n//                     <Grid  direction='row' className={classes.appbar} >\n//                         {Constant.appBarList.map((text, index) => (\n//                             <Link to={Constant.appBarListRoute[index]} key={index} style={{ textDecoration: 'none' }}>\n//                                 <Button\n//                                     startIcon={Constant.appBarListIcon[index]}\n//                                     style={{ color: 'white' }}\n//                                 >\n//                                     {text}\n//                                 </Button>\n//                             </Link>\n//                         ))}\n//                     </Grid>\n//                 </Toolbar>\n//             </AppBar>\n//             <Drawer\n//                 className={classes.drawer}\n//                 variant=\"persistent\"\n//                 anchor=\"left\"\n//                 open={open}\n//                 classes={{\n//                     paper: classes.drawerPaper,\n//                 }}\n//             >\n//                 <div className={classes.drawerHeader}>\n//                     <IconButton onClick={handleDrawerClose}>\n\n//                         {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n//                     </IconButton>\n//                 </div>\n//                 <Divider />\n//                 <List>\n//                     {Constant.menuList.map((text, index) => (\n//                         <Link to={Constant.menuListRoute[index]} key={index} style={{ textDecoration: 'none' }}>\n//                             <ListItem button key={text}>\n//                             <ListItemIcon>{Constant.menuListIcon[index]}</ListItemIcon>\n//                             <ListItemText primary={text} />\n//                             </ListItem>\n//                         </Link>\n\n//                     ))}\n//                 </List>\n//             </Drawer>\n//             <main\n//                 style={{ backgroundColor: '#D0D0D0' }}\n//                 className={clsx(classes.content, {\n//                     [classes.contentShift]: open,\n//                 })}\n//             >\n//             {pageComponent}\n//             </main>\n//         </>\n//     );\n// }\n\n// export default FixedAppBar;\nimport clsx from 'clsx';\nimport * as Constant from '../constants/constant';\nimport * as ConstantLogout from '../constants/cosntantLogout'\nimport Drawer from '@material-ui/core/Drawer';\nimport Grid from '@material-ui/core/Grid';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\n\nimport Typography from '@material-ui/core/Typography';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nimport TextField from '@material-ui/core/TextField';\nimport Button from \"@material-ui/core/Button\";\nimport { useTheme } from '@material-ui/core/styles';\nimport useStyles from '../assests/style/Style.js';\nimport { useState } from 'react';\nimport { Divider, List, ListItem, ListItemIcon, ListItemText } from '@material-ui/core';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport SearchIcon from '@material-ui/icons/Search';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport { Link } from \"react-router-dom\";\n\nconst FixedAppBar = ({ pageComponent, isLogin, loggedin, serachItem, searchType, searchString, setSearch, user }) => {\n    console.log(isLogin)\n    console.log(user)\n    const classes = useStyles();\n    const theme = useTheme();\n    const [open, setOpen] = useState(false);\n\n    const handleDrawerOpen = () => {\n        setOpen(true);\n    };\n\n    const handleDrawerClose = () => {\n        setOpen(false);\n    };\n\n    const handleLogout = (e) => {\n        console.log(e.currentTarget.value);\n        if (e.currentTarget.value === \"2\") {\n            alert(\"logout\")\n            loggedin(false, null);\n        }\n    };\n\n    const handleEnterSearch = (e) => {\n        if (e.key === 'Enter' && searchString) {\n            console.log(searchType, searchString);\n            setSearch(true);\n        }\n    }\n    const handleClickSearch = () => {\n        if (searchString) {\n            console.log(searchType, searchString);\n            setSearch(true);\n        }\n        if (searchType === \"all\") {\n            serachItem(searchType, \"all\")\n            setSearch(true);\n        }\n    }\n    return (\n        <>\n            <AppBar\n                style={{ backgroundColor: '#4F4F4F' }}\n                position=\"fixed\"\n                className={clsx(classes.appBar, {\n                    [classes.appBarShift]: open,\n                })}\n            >\n                <Toolbar>\n                    <IconButton\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        onClick={handleDrawerOpen}\n                        edge=\"start\"\n                        className={clsx(classes.menuButton, open && classes.hide)}\n                    >\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography variant=\"h6\" noWrap>\n                        {Constant.appName}\n                    </Typography>\n\n                    <TextField\n                        variant='outlined'\n                        type='search'\n                        color='secondary'\n                        placeholder='想要吃甚麼呢?'\n                        size='small'\n                        fullWidth\n                        className={classes.textfield}\n                        onChange={(e) => serachItem(searchType, e.target.value)}\n                        onKeyDown={handleEnterSearch}\n                    ></TextField>\n                    {/*                    searching function */}\n                    <Select className={classes.select} value={searchType} onChange={(e) => serachItem(e.target.value, searchString)}>\n                        <MenuItem value='productName'>商品</MenuItem>\n                        <MenuItem value='traderName'>店家</MenuItem>\n                        <MenuItem value='address'>地址</MenuItem>\n                        <MenuItem value='all'>ALL</MenuItem>\n                    </Select>\n                    <Button className={classes.searchButton} onClick={handleClickSearch} startIcon={<SearchIcon style={{ color: 'white' }} />}>搜尋</Button>\n                    {/*                    searching function */}\n\n                    <Grid direction='row' className={classes.appbar} >\n                        {isLogin === true ? (ConstantLogout.appBarList.map((text, index) => (\n\n                            <Link to={ConstantLogout.appBarListRoute[index]} key={index} style={{ textDecoration: 'none' }}>\n                                <Button\n                                    value={index}\n                                    startIcon={ConstantLogout.appBarListIcon[index]}\n                                    style={{ color: 'white' }}\n                                    onClick={(e) => { handleLogout(e) }}\n                                >\n                                    {text}\n                                </Button>\n                            </Link>\n\n                        ))) : (Constant.appBarList.map((text, index) => (\n                            <Link to={Constant.appBarListRoute[index]} key={index} style={{ textDecoration: 'none' }}>\n                                <Button\n                                    value={index}\n                                    startIcon={Constant.appBarListIcon[index]}\n                                    style={{ color: 'white' }}\n                                >\n                                    {text}\n                                </Button>\n                            </Link>\n                        )))}\n                        <Button\n                            startIcon={Constant.appBarListIcon[1]}\n                            style={{ color: 'white' }}>\n                            {user}\n                        </Button>\n                    </Grid>\n                </Toolbar>\n            </AppBar>\n            <Drawer\n                className={classes.drawer}\n                variant=\"persistent\"\n                anchor=\"left\"\n                open={open}\n                classes={{\n                    paper: classes.drawerPaper,\n                }}\n            >\n                <div className={classes.drawerHeader}>\n                    <IconButton onClick={handleDrawerClose}>\n\n                        {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n                    </IconButton>\n                </div>\n                <Divider />\n                <List>\n                    {isLogin === true ? (ConstantLogout.menuList.map((text, index) => (\n                        <Link to={ConstantLogout.menuListRoute[index]} key={index} style={{ textDecoration: 'none' }}>\n                            <ListItem button key={text}>\n                                <ListItemIcon>{ConstantLogout.menuListIcon[index]}</ListItemIcon>\n                                <ListItemText primary={text} />\n                            </ListItem>\n                        </Link>\n\n                    ))) : (Constant.menuList.map((text, index) => (\n                        <Link to={Constant.menuListRoute[index]} key={index} style={{ textDecoration: 'none' }}>\n                            <ListItem button key={text}>\n                                <ListItemIcon>{Constant.menuListIcon[index]}</ListItemIcon>\n                                <ListItemText primary={text} />\n                            </ListItem>\n                        </Link>)))}\n                </List>\n            </Drawer>\n            <main\n                style={{ backgroundColor: '#D0D0D0' }}\n                className={clsx(classes.content, {\n                    [classes.contentShift]: open,\n                })}\n            >\n                {pageComponent}\n            </main>\n        </>\n    );\n}\n\nexport default FixedAppBar;"]},"metadata":{},"sourceType":"module"}